import cv2
import mediapipe as mp
import os
from flask import Flask, request, jsonify

mp_draw = mp.solutions.drawing_utils
mp_hand = mp.solutions.hands
mp_drawing_styles = mp.solutions.drawing_styles

app = Flask(__name__)

@app.route('/detect', methods=['POST'])
def get_detection():
    print("OKAY")
    file = request.files['video']
    fname = file.filename
    print("File Name is ", fname)
    print("File Type is ", file.content_type)
    file.save(os.path.join('./Videos/', fname))
    print(file)
    i = 0
    video = cv2.VideoCapture('./Videos/' + fname)
    with mp_hand.Hands(min_detection_confidence=0.5, min_tracking_confidence=0.5) as hands:
        while True:
            ret, image = video.read()
            if image is not None:
                image = cv2.resize(cv2.cvtColor(image, cv2.COLOR_RGB2BGR), (400, 700))
            elif image is None:
                break
            results = hands.process(image)
            image = cv2.resize(cv2.cvtColor(image, cv2.COLOR_RGB2BGR), (400, 700))
            # img = cv2.imwrite(str(i)+".jpg", image)
            s = cv2.imread('Images/white400700.jpg')
            if results.multi_hand_landmarks:
                for hand_landmark in results.multi_hand_landmarks:
                    mp_draw.draw_landmarks(image, hand_landmark, mp_hand.HAND_CONNECTIONS, mp_drawing_styles.get_default_hand_landmarks_style(),  mp_drawing_styles.get_default_hand_connections_style())
                    mp_draw.draw_landmarks(s, hand_landmark, mp_hand.HAND_CONNECTIONS, mp_drawing_styles.get_default_hand_landmarks_style(),  mp_drawing_styles.get_default_hand_connections_style())
                    cv2.imwrite("DATASET/Recent/"+str(i) + ".jpg", s)
                    i += 1
            cv2.imshow("Frame", image)
            cv2.imshow("Only Landmarks", s)
            k = cv2.waitKey(1)
            if k == ord('q'):
                break
    video.release()
    cv2.destroyAllWindows()
    os.remove('./Videos/' + fname)
    return 'Images Saved Successfully!'

@app.route('/testing', methods=['GET'])
def Test():
    return 'Working'

if __name__ == '__main__':
    app.run(host='192.168.43.17', debug=True)
